pipeline {
    agent any
	environment {
        AWS_REGION = 'ap-south-1' 
        ECR_REPO_NAME = 'devops-nxt-repo'
        ECR_URI = "381491987051.dkr.ecr.ap-south-1.amazonaws.com/devops-nxt-repo"
        DOCKER_IMAGE_TAG = 'latest'
        IMAGE_NAME = 'devopsnxt-demo'
    }
    stages {
        stage('test-pipeline') {
            steps {
                echo "Pipeline triggered success"
            }
        }
        stage('create Amazon ECR repository'){
			steps{
				echo "Inside creation repo"
				withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWS_Creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
					sh 'aws ecr describe-repositories --repository-names devops-nxt-repo || aws ecr create-repository --repository-name devops-nxt-repo'
					echo "Successfully created Amazon ECR"
				}
			}        
        }
        stage('Build docker image'){
        	steps{
        		echo "Building docker image"
        		sh 'docker --version'
        		sh 'mvn clean install'
        		script{
        			dockerImage = docker.build("${IMAGE_NAME}:${DOCKER_IMAGE_TAG}", "-f Dockerfile .")
				}
        	}
        }
        stage('Tag Docker Image') {
            steps {
                script {
                    sh "docker tag ${IMAGE_NAME}:${DOCKER_IMAGE_TAG} ${ECR_URI}:${DOCKER_IMAGE_TAG}"
                }
            }
        }
        stage('Push docker image to Amazon ECR and run'){
        	steps{
        	    withAWS(credentials: 'AWS_Creds', region: "${AWS_REGION}") {
                    sh 'aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_URI}'
                    sh "docker push ${ECR_URI}:latest"    
              }
        	}
        }
        stage('Run docker image from Amazon ECR'){
        	steps{
        	    withAWS(credentials: 'AWS_Creds', region: "${AWS_REGION}") {
                    sh 'aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_URI}'
              }
              sh "docker pull ECR_URI:$IMAGE_TAG"
              sh "docker run -d -p 9091:9091 --name $IMAGE_NAME ECR_URI:$DOCKER_IMAGE_TAG"
        	}
       }
     }  
}
